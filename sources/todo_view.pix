view
  component TodoApp(app: TodoApp){
    action toggleAll(){
      app {
        todos {
          finished = !app.allFinished
        }
      }
    }

    action createTodo(task: String) {
      t: Todo {
        task = task
        finished = false
        app = app
      }
      app { input = "" }
    }

    section[className="todoapp"]{
      header[className="header"] {
      h1 { "todos" }
        @StringInput(app.input
        , if(app.input != "") createTodo
        , "new-todo", false, "What needs to be done?"
        )
      }

      if(app.todos.count() > 0)
        section[className="main"] {
          @BooleanInput(app.allFinished, "toggle-all", toggleAll)
          ul[className="todo-list"] {
            for(todo in app.visibleTodos) (@TodoItem(todo))
          }
        }
      @TodoFooter(app)
    }
  }

  component TodoFilters(app: TodoApp) {
    ul[className="filters"]{
      @FilterType("All", app)
      @FilterType("Completed", app)
      @FilterType("Not Completed", app)
    }
  }


  component FilterType(name: String, app: TodoApp) {
    action setFilter(){
      app { filter = name }
    }
    li {
      a[className=if(app.filter == name) "selected" else "", onClick=setFilter()] {
        name
      }
    }
  }

  component TodoFooter(app: TodoApp){
    action clearCompleted(){
      app {
        todos = todos \ finishedTodos
      }
    }

    footer[className="footer"] {
      span[className="todo-count"] {
        "${app.todosLeft} ${if(app.todosLeft == 1) "item" else "items"} left"
      }

      @TodoFilters(app)

      if(app.finishedTodos.count() > 0)
        a[className="clear-completed", onClick=clearCompleted()]{ "Clear completed" }
    }
  }

  component BooleanInput(checked: Boolean, className: String, onChange: Action[]) {
    input[
      type="checkbox"
    , className=className
    , checked=checked
    , onChange=onChange()
    ]
  }